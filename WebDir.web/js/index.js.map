{
  "version": 3,
  "sources": ["../index.js"],
  "sourcesContent": ["const directoryData = [\r\n  { id: 1, name: 'Service 1', department: 'D\u00E9partement 1', description: 'Description 1' },\r\n  { id: 2, name: 'Service 2', department: 'D\u00E9partement 2', description: 'Description 2' },\r\n  // Ajoutez plus de donn\u00E9es fictives si n\u00E9cessaire\r\n];\r\n\r\n// Fonction pour afficher les donn\u00E9es\r\nfunction displayDirectoryData() {\r\n  const directoryList = document.getElementById('directory-list');\r\n  directoryData.forEach(entry => {\r\n      const entryDiv = document.createElement('div');\r\n      entryDiv.innerHTML = `\r\n          <h2>${entry.name}</h2>\r\n          <p>${entry.department}</p>\r\n          <p>${entry.description}</p>\r\n      `;\r\n      directoryList.appendChild(entryDiv);\r\n  });\r\n}\r\n\r\n// Appeler la fonction pour afficher les donn\u00E9es\r\ndisplayDirectoryData();\r\n\r\n\r\n// 1. Trier les donn\u00E9es par ordre alphab\u00E9tique\r\ndirectoryData.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n// 2. Filtrage de la liste d\u2019entr\u00E9e par service / d\u00E9partement\r\nfunction filterByDepartment(department) {\r\n    return directoryData.filter(entry => entry.department === department);\r\n}\r\n\r\n// 3. Recherche d\u2019une entr\u00E9e par le nom\r\nfunction searchByName(name) {\r\n    return directoryData.filter(entry => entry.name.includes(name));\r\n}\r\n\r\n// 4. Affichage complet d\u2019une entr\u00E9e ; en cliquant sur l\u2019adresse mail de la personne, l\u2019application de mail par d\u00E9faut est lanc\u00E9e.\r\n// 5. Liste d\u2019entr\u00E9e filtr\u00E9e par nom et d\u00E9partement ou service\r\n// 6. Tri des listes d\u2019entr\u00E9es selon l\u2019ordre alphab\u00E9tique ascendant ou descendant\r\n// 7. Affichage de l\u2019image associ\u00E9e \u00E0 une entr\u00E9e si elle est pr\u00E9sente\r\nfunction displayDirectoryData(data = directoryData, order = 'asc') {\r\n    const directoryList = document.getElementById('directory-list');\r\n    directoryList.innerHTML = ''; // Clear the list\r\n    const sortedData = data.sort((a, b) => order === 'asc' ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name));\r\n    sortedData.forEach(entry => {\r\n        const entryDiv = document.createElement('div');\r\n        entryDiv.innerHTML = `\r\n            <h2>${entry.name}</h2>\r\n            <p>${entry.department}</p>\r\n            <p>${entry.description}</p>\r\n            <a href=\"mailto:${entry.email}\">${entry.email}</a>\r\n            ${entry.image ? `<img src=\"${entry.image}\" alt=\"${entry.name}\">` : ''}\r\n        `;\r\n        directoryList.appendChild(entryDiv);\r\n    });\r\n}\r\n"],
  "mappings": ";AAAA,IAAM,gBAAgB;AAAA,EACpB,EAAE,IAAI,GAAG,MAAM,aAAa,YAAY,oBAAiB,aAAa,gBAAgB;AAAA,EACtF,EAAE,IAAI,GAAG,MAAM,aAAa,YAAY,oBAAiB,aAAa,gBAAgB;AAAA;AAExF;AAGA,SAAS,uBAAuB;AAC9B,QAAM,gBAAgB,SAAS,eAAe,gBAAgB;AAC9D,gBAAc,QAAQ,WAAS;AAC3B,UAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,aAAS,YAAY;AAAA,gBACX,MAAM;AAAA,eACP,MAAM;AAAA,eACN,MAAM;AAAA;AAEf,kBAAc,YAAY,QAAQ;AAAA,EACtC,CAAC;AACH;AAGA,qBAAqB;AAIrB,cAAc,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAgBzD,SAAS,qBAAqB,OAAO,eAAe,QAAQ,OAAO;AAC/D,QAAM,gBAAgB,SAAS,eAAe,gBAAgB;AAC9D,gBAAc,YAAY;AAC1B,QAAM,aAAa,KAAK,KAAK,CAAC,GAAG,MAAM,UAAU,QAAQ,EAAE,KAAK,cAAc,EAAE,IAAI,IAAI,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AACpH,aAAW,QAAQ,WAAS;AACxB,UAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,aAAS,YAAY;AAAA,kBACX,MAAM;AAAA,iBACP,MAAM;AAAA,iBACN,MAAM;AAAA,8BACO,MAAM,UAAU,MAAM;AAAA,cACtC,MAAM,QAAQ,aAAa,MAAM,eAAe,MAAM,WAAW;AAAA;AAEvE,kBAAc,YAAY,QAAQ;AAAA,EACtC,CAAC;AACL;",
  "names": []
}
